{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;AAGR,mBAAW,EAAC;AACR,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,MAAM;SAClB;;AAED,uBAAe,EAAC,CAAC;AACjB,uBAAe,EAAC,CAAC;;AAEjB,cAAM,EAAC;AACH,uBAAQ,IAAI;AACZ,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;;AAED,cAAM,EAAC;AACH,uBAAU,IAAI;AACd,gBAAI,EAAG,EAAE,CAAC,IAAI;SACjB;;AAED,oBAAY,EAAC;AACT,uBAAU,IAAI;AACd,gBAAI,EAAG,EAAE,CAAC,KAAK;SAClB;;AAED,kBAAU,EAAE;AACR,uBAAU,IAAI;AACd,eAAG,EAAG,EAAE,CAAC,SAAS;SACrB;KACJ;;;AAGD,UAAM,EAAE,kBAAY;;AAEhB,YAAI,CAAC,KAAK,GAAG,CAAC,CAAE;;AAEjB,YAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAC,CAAC,CAAC;AAClD,YAAI,CAAC,YAAY,EAAE,CAAC;KACtB;AACD,gBAAY,EAAG,wBAAU;;AAErB,YAAI,OAAO,GAAI,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;AAEhD,YAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;;AAE5B,eAAO,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;;AAE/C,eAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;;KAE5C;AACD,sBAAkB,EAAG,8BAAU;AAC3B,YAAI,KAAK,GAAC,CAAC,CAAC;;AAEZ,YAAI,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,UAAU,GAAC,EAAE,CAAC;;AAE9F,YAAI,IAAI,GAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC;AAC3B,aAAK,GAAC,EAAE,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC;AAClC,eAAO,EAAE,CAAC,CAAC,CAAC,KAAK,EAAC,KAAK,CAAC,CAAA;KAC3B;;;AAGD,aAAS,EAAE,qBAAY;AACnB,YAAI,CAAC,KAAK,IAAI,CAAC,CAAE;AACjB,YAAI,CAAC,YAAY,CAAC,MAAM,GAAG,QAAQ,GAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;AAC3D,UAAE,CAAC,WAAW,CAAC,UAAU,CAAE,IAAI,CAAC,UAAU,EAAG,KAAK,CAAC,CAAC;KACvD;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        \n        //这个属性引用星星预览资源\n        startPrefab:{\n            default: null,\n            type: cc.Prefab\n        },\n        //设置星星消失事件的随机范围\n        maxStarDuration:0,\n        minStarDuration:0,\n        //地面节点，用于确定星星生成的高度\n        ground:{\n            default:null ,\n            type: cc.Node\n        },\n        //player 节点，用于获取主角弹跳的高度，和控制主角行动开关\n        player:{\n            default : null ,\n            type : cc.Node\n        },\n        //score引用\n        scoreDisplay:{\n            default : null,\n            type : cc.Label\n        },\n        //得分音效引用\n        scoreAudio: {\n            default : null ,\n            url : cc.AudioClip\n        }\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        //初始化记分\n        this.score = 0 ;\n        //坐标y\n       this.groundY = this.ground.y+this.ground.height/2;\n       this.spawnNewStar();\n    },\n    spawnNewStar : function(){\n        // 关联模版， 生成新节点\n        var newStar =  cc.instantiate(this.startPrefab);\n        //将新节点添加到canvas上\n        this.node.addChild(newStar);\n        //为星星位置设定一个随机值\n        newStar.setPosition(this.getNewStarPosition());\n        //将Game 组件的实例 传入星星组件\n        newStar.getComponent('star').game = this;\n        //ewStar.getComponent('star').game=this;\n    },\n    getNewStarPosition : function(){\n        var randX=0;\n        // 根据地板位置和主角跳跃高度产生随机y\n        var randY = this.groundY + cc.random0To1() * this.player.getComponent('player').jumpHeight+50;\n        // 根据屏幕宽度，随机产生 x\n        var maxX=this.node.width/2;\n        randX=cc.randomMinus1To1() * maxX;\n        return cc.p(randX,randY)\n    },\n    //update: function (dt) {\n    //},\n    gainScore: function () {\n        this.score += 1 ;\n        this.scoreDisplay.string = 'score:' +this.score.toString();\n        cc.audioEngine.playEffect( this.scoreAudio , false);\n    },\n    \n});\n"
  ]
}